[build-system]
requires = ["hatchling>=1.24"]
build-backend = "hatchling.build"

[project]
name = "statline"
version = "0.1.0"
description = "StatLine â€” weighted player scoring, efficiency modeling, and Discord tooling"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "StatLine" }]
keywords = ["basketball", "analytics", "mvp", "efg", "discord", "google-sheets"]

# Runtime deps for CLI and core library
dependencies = [
  "typer>=0.12",
  "pyyaml>=6",
]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Environment :: Console",
]

[project.optional-dependencies]
# Enable Google Sheets ingestion.
sheets = [
  "gspread>=6.0.0",
  "google-auth>=2.0.0",
]
# Discord bot runtime (Orion)
discord = [
  "hikari>=2.0.0.dev121",
  "hikari-lightbulb>=2.3.3",
  "aiohttp>=3.8",
  "python-dotenv>=1.0.1",
]
# Dev & QA
dev = [
  "pytest>=7.0",
  "pytest-cov>=4.1",
  "ruff>=0.5",
  "mypy>=1.6",
  "coverage>=7.2",
  "hypothesis>=6.100",
  "types-PyYAML",
]

[project.scripts]
# Keep this if cli.py defines `def main(): app()`
statline = "statline.cli:main"

[project.urls]
Homepage = "https://github.com/amillolive/StatLine"
Repository = "https://github.com/amillolive/StatLine"
Issues = "https://github.com/amillolive/StatLine/issues"

# ------------------------
# Tooling configuration
# ------------------------

[tool.ruff]
line-length = 100
target-version = "py310"
extend-select = ["I"]
src = ["statline", "tests"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
disallow_untyped_defs = false
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
pretty = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
# Uncomment to fail CI on empty test files:
# fail_on_empty = true

# ------------------------
# Hatchling build config
# ------------------------

# Include the package plus all non-Python assets needed at runtime (YAML, JSON, SQL)
[tool.hatch.build.targets.wheel]
packages = ["statline"]
include = [
  "statline/data/**/*",                 # example.yaml, max_stats.json, etc.
  "statline/core/adapters/defs/*",      # bundled adapter definitions
  "statline/data/migrations/*.sql",     # DB migrations
]

[tool.hatch.build.targets.sdist]
include = [
  "statline",
  "tests",
  "README.md",
  "LICENSE",
  "pyproject.toml",
]
