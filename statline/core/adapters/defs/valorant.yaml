key: valorant
version: 0.1.0
aliases: [val, vrl]
title: Valorant

# Dimensions you can group/aggregate by
dimensions:
  map:
    values: [Ascent, Bind, Breeze, Fracture, Haven, Icebox, Lotus, Pearl, Split, Sunset]
  side:
    values: [Attack, Defense]
  agent:
    values: []      # optional free text; leave empty to allow any
  mode:
    values: [Pro, Ranked, Scrim]

# Buckets the engine will weight; keep buckets semantically meaningful
buckets:
  frag:    {desc: Fragging output}
  entry:   {desc: First duel impact}
  impact:  {desc: Round impact (ACS/ADR)}
  util:    {desc: Utility / objective}
  survive: {desc: Survivability}
  discipline: {desc: Avoid bad deaths}

# Canonical metrics we’ll compute; map each to a bucket
metrics:
  - key: kills
    bucket: frag
    clamp: [0, 60]
  - key: headshots
    bucket: frag
    clamp: [0, 60]
  - key: deaths
    bucket: discipline
    clamp: [0, 60]
    invert: true        # higher is worse → engine penalizes
  - key: assists
    bucket: util
    clamp: [0, 60]
  - key: first_kills
    bucket: entry
    clamp: [0, 20]
  - key: first_deaths
    bucket: discipline
    clamp: [0, 20]
    invert: true
  - key: adr               # average damage per round
    bucket: impact
    clamp: [0, 300]
    transform: capped_linear
  - key: acs               # average combat score
    bucket: impact
    clamp: [0, 400]
    transform: capped_linear
  - key: kast_pct          # % rounds with Kill/Assist/Survive/Trade
    bucket: survive
    clamp: [0.4, 1.0]
    transform: pct_softcap
  - key: plants
    bucket: util
    clamp: [0, 20]
  - key: defuses
    bucket: util
    clamp: [0, 20]
  - key: kdr               # derived
    bucket: frag
    clamp: [0.2, 3.0]
    transform: capped_linear
  - key: fkfd_diff         # derived: first_kills - first_deaths
    bucket: entry
    clamp: [-10, 10]

# How to compute metrics from raw row fields
# (Engine evaluates expressions with $.field, + - * / and min/max/abs/round)
mapping:
  kills:        $.kills
  headshots:    $.headshots
  deaths:       $.deaths
  assists:      $.assists
  first_kills:  $.first_kills
  first_deaths: $.first_deaths
  adr:          $.damage / max($.rounds_played, 1)
  acs:          $.acs
  kast_pct:     $.kast / 100            # raw KAST often comes as 0–100
  plants:       $.plants
  defuses:      $.defuses
  kdr:          $.kills / max($.deaths, 1)
  fkfd_diff:    $.first_kills - $.first_deaths

# Default weight presets; guilds can override later
weights:
  mvp:
    frag: 0.30
    entry: 0.18
    impact: 0.28
    util: 0.10
    survive: 0.09
    discipline: 0.05
  entry:
    frag: 0.25
    entry: 0.40
    impact: 0.20
    util: 0.05
    survive: 0.05
    discipline: 0.05
  support:
    frag: 0.18
    entry: 0.06
    impact: 0.20
    util: 0.36
    survive: 0.12
    discipline: 0.08

# Extra penalties per preset (e.g., over-weight bad deaths for MVP)
penalties:
  mvp:
    discipline: 0.12
  entry:
    discipline: 0.10
  support:
    discipline: 0.05

# Minimal sniff to auto-pick adapter when headers are present
sniff:
  require_any_headers: [kills, deaths, assists, damage, rounds_played, acs, kast]
